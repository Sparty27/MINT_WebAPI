@page "/customers"
@using MINT_Blazor.Models;
@inject HttpClient Http

<PageTitle>Customers</PageTitle>

<h1>Customers</h1>

<button class="btn btn-success button__create-new">Create new</button>

@if (customers == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>First Name</th>
                <th>Last Name</th>
                <th>Phone</th>
                <th>Email</th>
                <th>Street</th>
                <th>City</th>
                <th>State</th>
                <th>ZipCode</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var customer in customers)
            {
                <tr>
                    <td>@customer.FirstName</td>
                    <td>@customer.LastName</td>
                    <td>@customer.Phone</td>
                    <td>@customer.Email</td>
                    <td>@customer.Street</td>
                    <td>@customer.City</td>
                    <td>@customer.State</td>
                    <td>@customer.ZipCode</td>
                    <td>
                        <button class="btn btn-primary" type="button">Edit</button>
                        <button class="btn btn-danger" type="button" @* @onclick="() => ModalDialogDelete.Open(customer.StoreId)" *@>Delete</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@* <ModalDialogDelete @ref="@ModalDialogDelete" Title="Warning!" Stores="@customers"> 
    <div class="row">
        <h3>Are you sure you want to delete?</h3>
        <hr>
        <div style="display: flex; gap: 50px; justify-content: space-around">
            <button style="width:200px;" class="btn btn-primary" @onclick="() => ModalDialogDelete.Confirm()">Yes</button>
            <button style="width:200px;" class="btn btn-danger" @onclick="() => ModalDialogDelete.Close()">No</button>
        </div>
    </div>
</ModalDialogDelete> *@

@code {
    // private ModalDialogDelete ModalDialogDelete { get; set; }

    private List<Customer>? customers;

    protected override async Task OnInitializedAsync()
    {
        customers = await Http.GetFromJsonAsync<List<Customer>>("api/Customer/GetAllCustomers");
    }
}
